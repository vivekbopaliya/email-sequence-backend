generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  email     String         @unique
  password  String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  flows     Flow[]
  templates EmailTemplate[]

  LeadSource LeadSource[]
}

model Flow {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  nodes           Json
  edges           Json
  scheduledEmails ScheduledEmail[]
  userId          String           @db.ObjectId
  user            User             @relation(fields: [userId], references: [id])
  status          String           @default("PENDING") 
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model ScheduledEmail {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  flowId     String   @db.ObjectId
  flow       Flow     @relation(fields: [flowId], references: [id], onDelete: Cascade)
  jobId      String 
  sendAt     DateTime
  createdAt  DateTime @default(now())
}

model EmailTemplate {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  subject   String
  body      String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LeadSource {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  contacts  Json      // Store list of contacts(name + emails) as JSON 
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}